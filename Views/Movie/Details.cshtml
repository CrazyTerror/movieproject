@model MovieProject.Models.MovieDetailsViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = @Model.Movie.Name + " (" + Model.ReleaseYear + ")";
}

<div class="row">
    <img src="/images/filmitem/@(Model.Movie.Id).jpg" onerror="this.src='/images/filmitem/template.jpg';this.onerror='';" alt="@Model.Movie.Name" width="100%">
</div>
<div class="row">
    <div class="col-md-10">
        <ul>
            <li>
                <label>Average</label>
                @if (@Model.Movie.VoteAverage != null) { @Model.Movie.VoteAverage } else { <text>No votes</text> }
            </li>
            <li>
                <label>Votes</label>
                @if (@Model.Movie.VoteCount != null) { @Model.Movie.VoteCount } else { <text>No votes</text> }
            </li>
            @if (User.Identity.IsAuthenticated)
            {
                @await Html.PartialAsync("_FilmItemRatingPartial", Model.Movie)
            }
        </ul>
    </div>
</div>

<div>
    <ul>
        <li>
            <label>Released</label> @Model.ReleaseDate
        </li>
        <li>
            <label>Runtime</label> @Model.Movie.Runtime
        </li>
        <li>
            <label>Genres</label>
            @String.Join(", ", Model.Genres)
            @if (User.Identity.IsAuthenticated) { <a asp-action="Genre">Edit</a> }
        </li>
        <li>
            <label>Status</label> @Model.Movie.Status
        </li>
        @if (Model.Movie.FilmItemCredits.Where(p => p.PartType == PartType.Director).ToList().Count > 0)
        {
            <li>
                <label>Director</label>
                @Html.Raw(string.Join(", ", Model.Movie.FilmItemCredits.Where(p => p.PartType == PartType.Director).OrderBy(x => x.Person.Surname).Select(s => string.Format("<a href={0}>{1}{2}{3}</a>", "/person/" + s.Person.Slug, s.Person.FirstName, " ", s.Person.Surname))))
            </li>
        }
        @if (Model.Movie.FilmItemCredits.Where(p => p.PartType == PartType.Producer).ToList().Count > 0)
        {
            <li>
                <label>Director</label>
                @String.Join(", ", Model.Producers)
            </li>
        }
        @if (Model.Movie.FilmItemCredits.Where(p => p.PartType == PartType.Writer).ToList().Count > 0)
        {
            <li>
                <label>Director</label>
                @String.Join(", ", Model.Writers)
            </li>
        }
    </ul>
</div>

@if (User.Identity.IsAuthenticated)
{
    <form class="form-horizontal" asp-action="HistoryModal" asp-controller="User" method="post" enctype="multipart/form-data">
        <input type="hidden" name="FilmItemId" value="@Model.Movie.Id" />
        <div class="col-md-8">
            <span class="text-danger"></span>
            <input type="date" name="WatchedOn" />
        </div>
        <div class="text-center">
            <button class="btn btn-primary" type="submit">Save Changes</button>
        </div>
    </form>

    <div id="modal-placeholder"></div>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" data-url="@Url.Action("ListsModal", new { Slug = Model.Movie.Slug })">
        Add To List
    </button>
}

@await Html.PartialAsync("_FilmItemVideoPartial", Model.Movie)

@await Html.PartialAsync("_FilmItemCastPartial", Model.Movie)

@await Html.PartialAsync("_FilmItemCommentPartial", Model.Movie)

@await Html.PartialAsync("_FilmItemListsPartial", Model.Movie)

@await Html.PartialAsync("_MediaPartial", Model.Movie.Media)

<div>
    <img src="/images/filmitem/poster/@(Model.Movie.Id).jpg" onerror="this.src='/images/filmitem/poster/template.jpg';this.onerror='';" alt="@Model.Movie.Name">
</div>

@section Scripts
{
    <script>
        var select = '';
        for (i=1; i<=10; i++)
        {
            select += '<option val=' + i + '>' + i + '</option>';
        }
        $('#rating').html(select);
    </script>
}