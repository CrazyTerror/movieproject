@model MovieProject.Models.SeasonDetailsViewModel
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = @Model.Season.Rel_SeriesName + " - " + @Model.Season.Name;
    string selected = "color:red;";
}

<div class="row">
    <img src="/images/filmitem/@(Model.Season.SeriesId).jpg" onerror="this.src='/images/filmitem/template.jpg';this.onerror='';" alt="@Model.Season.Name" width="100%" />
</div>

<div class="row">
    <a asp-controller="Series" asp-action="Details">@Model.Season.Rel_SeriesName</a>
</div>
<div class="row">
    @Model.Season.Name
</div>

@if (User.Identity.IsAuthenticated)
{
    <form asp-action="Delete" method="post">
        <a asp-action="Edit" class="btn btn-sm btn-warning">
            Edit Season
        </a>
        @if (User.IsInRole("Admins"))
        {
            <button type="submit" class="btn btn-danger btn-sm">
                Delete Season
            </button>
        }
    </form>
}

<div>Season</div>
@for (var i = 1; i < @Model.SeasonCount + 1; i++)
{
    <a style="@(i == @Model.Season.Season_SeasonNumber ? @selected : null )" asp-action="Details" asp-controller="Season" asp-route-seasonnumber="@i">@i </a>
}

<div class="row">
    <label>Average</label>
    @if (@Model.Season.VoteAverage != null) { @Model.Season.VoteAverage } else { <text>No votes</text>}
</div>

<div class="row">
    <label>Votes</label>
    @if (@Model.Season.VoteAverage != null) { @Model.Season.VoteCount } else { <text>No votes</text>}
</div>

@if (User.Identity.IsAuthenticated)
{
    @await Html.PartialAsync("_FilmItemRatingPartial", Model.Season)
}

<div class="row">
    <label>Aired</label> @Model.FirstEpisodeDate
</div>

<div class="row">
    <label>Total Runtime</label> @Model.TotalRuntime
</div>

<div class="row">
    <label>Language</label> @Model.Season.OriginalLanguage
</div>

<div class="row">
    <label>Genres</label> @String.Join(", ", Model.Genres)
</div>

<div class="row">
    <label>Description</label> @Model.Season.Description
</div>

@foreach (var episode in @Model.Season.Episodes.OrderBy(ob => ob.Episode_EpisodeNumber))
{
    <div class="row">
        <a asp-action="Details" asp-controller="Episode" asp-route-episodenumber="@episode.Episode_EpisodeNumber">
            <img src="/images/filmitem/@(episode.Id).jpg" onerror="this.src='/images/filmitem/template.jpg';this.onerror='';" alt="@episode.Name" height="170px" width="300px" />
        </a>
        <div class="row">
            @if(@episode.Episode_EpisodeNumber < 10)
            { 
                <text>@(episode.Episode_SeasonNumber + "x0" + @episode.Episode_EpisodeNumber)</text>
            } else
            {
                <text>@(episode.Episode_SeasonNumber + "x" + @episode.Episode_EpisodeNumber)</text>
            }
            <text>@episode.Name</text>
        </div>
        <div class="row">
            @if(episode.Episode_EpisodeNumber == 1 && episode.Episode_SeasonNumber == 1) { <text>Series Premiere</text> } else if (episode.Episode_EpisodeNumber == 1) { <text>Season Premiere</text> }    
            <text>@(episode.Runtime + " mins")</text>
            <text>@(episode.ReleaseDate.HasValue ? episode.ReleaseDate.Value.ToString("d MMMM yyyy") : "")</text>
        </div>
        <div class="row">
            <p>@episode.Description</p>
        </div>
    </div>
}

<div>
    @Model.Season.Episodes.Count @(Model.Season.Episodes.Count > 1 || Model.Season.Episodes.Count == 0 ? "Episodes" : "Episode" )
</div>

@if (User.Identity.IsAuthenticated)
{
    <div class="text-center">
        <a asp-controller="Episode" asp-action="Create" class="btn btn-primary">Add Episode</a>
    </div>
    <div class="text-center">
        <a asp-controller="Season" asp-action="Edit" class="btn btn-warning">Edit Season</a>
    </div>
}

@if (User.Identity.IsAuthenticated)
{
    <form class="form-horizontal" asp-action="HistoryModal" asp-controller="User" method="post" enctype="multipart/form-data">
        <input type="hidden" name="FilmItemId" value="@Model.Season.Id" />
        <div class="col-md-8">
            <span class="text-danger"></span>
            <input type="date" name="WatchedOn" />
        </div>
        <div class="text-center">
            <button class="btn btn-primary" type="submit">Save Changes</button>
        </div>
    </form>
    
    <div id="modal-placeholder"></div>
    <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal" data-url="@Url.Action("ListsModal", new { Slug = Model.Season.Slug, SeasonNumber = Model.Season.Season_SeasonNumber })">
        Add To List
    </button>
}

@await Html.PartialAsync("_FilmItemVideoPartial", Model.Season)

@await Html.PartialAsync("_FilmItemCommentPartial", Model.Season)

@await Html.PartialAsync("_FilmItemListsPartial", Model.Season)

@await Html.PartialAsync("_MediaPartial", Model.Season.Media)

<div class="row">
    <img src="/images/filmitem/poster/@(Model.Season.Id).jpg" onerror="this.src='/images/filmitem/poster/template.jpg';this.onerror='';" alt="@Model.Season.Name" />
</div>

@section Scripts
{
    <script>
        var select = '';
        for (i=1; i<=10; i++)
        {
            select += '<option val=' + i + '>' + i + '</option>';
        }
        $('#rating').html(select);
    </script>
}