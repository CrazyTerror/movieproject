@model MovieProject.Models.Episode
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = @ViewBag.Series + " " + @Model.Episode_SeasonNumber + "x" + @ViewBag.Episode + " \"" +  @Model.Name + "\"";
    string selected = "color:red;";
}

<div class="row">
    <img src="/images/filmitem/@(Model.Id).jpg" onerror="this.src='/images/filmitem/template.jpg';this.onerror='';" alt="@Model.Name" width="100%" />
</div>

<div class="row">
    <a asp-controller="Series" asp-action="Details">@ViewBag.Series:</a>
    <a asp-controller="Season" asp-action="Details">@ViewBag.Season</a>
</div>
<div class="row">
    @(Model.Episode_SeasonNumber + "x" + ViewBag.Episode) @Model.Name
</div>

<div>Episode</div>
@for (var i = 1; i < @ViewBag.EpisodeCount + 1; i++)
{
    <a style="@(i == @Model.Episode_EpisodeNumber ? @selected : null )" asp-action="Details" asp-controller="Episode" asp-route-episodenumber="@i">@i</a>
}
<div class="row">
    <label>Average</label> @if (@Model.VoteAverage != null) { @Model.VoteAverage } else { <text>No votes</text>}
</div>

<div class="row">
    <label>Votes</label> @if (@Model.VoteAverage != null) { @Model.VoteCount } else { <text>No votes</text>}
</div>

@if (User.Identity.IsAuthenticated)
{
    @await Html.PartialAsync("_FilmItemRatingPartial", Model)
}

<div class="row">
    <label>Aired</label> @(Model.ReleaseDate.HasValue ? Model.ReleaseDate.Value.ToString("d MMMM yyyy") : "")
</div>

<div class="row">
    <label>Runtime</label> @Model.Runtime
</div>

<div class="row">
    <label>Language</label> @Model.OriginalLanguage
</div>

<div class="row">
    <label>Genres</label> @String.Join(", ", ViewBag.Genres)
</div>

<div class="row">
    <label>Description</label> @Model.Description
</div>

@if (User.Identity.IsAuthenticated)
{
    <form asp-action="Delete" method="post">
        <a asp-action="Edit" class="btn btn-sm btn-warning">
            Edit Episode
        </a>
        @if (User.IsInRole("Admins"))
        {
            <input type="hidden" name="Id" value="@Model.Id" />
            <button type="submit" class="btn btn-danger btn-sm">
                Delete Episode
            </button>
        }
    </form>
}

@if (User.Identity.IsAuthenticated)
{
    <form class="form-horizontal" asp-action="HistoryModal" asp-controller="User" method="post" enctype="multipart/form-data">
        <input type="hidden" name="FilmItemId" value="@Model.Id" />
        <div class="col-md-8">
            <span class="text-danger"></span>
            <input type="date" name="WatchedOn" />
        </div>
        <div class="text-center">
            <button class="btn btn-primary" type="submit">Save Changes</button>
        </div>
    </form>
    
    <div id="modal-placeholder"></div>
    <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal" data-url="@Url.Action("ListsModal", new { Slug = Model.Slug, SeasonNumber = Model.Episode_SeasonNumber, EpisodeNumber = Model.Episode_EpisodeNumber })">
        Add To List
    </button>
}

@await Html.PartialAsync("_FilmItemVideoPartial", Model)

@await Html.PartialAsync("_FilmItemCommentPartial", Model)

@await Html.PartialAsync("_FilmItemListsPartial", Model)

@await Html.PartialAsync("_MediaPartial", Model.Media)

@section Scripts
{
    <script>
        var select = '';
        for (i=1; i<=10; i++)
        {
            select += '<option val=' + i + '>' + i + '</option>';
        }
        $('#rating').html(select);
    </script>
}
