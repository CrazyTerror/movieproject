@model MovieProject.Models.SeriesDetailsViewModel
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = @Model.Series.Name + " (" + Model.ReleaseYear + ")";
}

<div class="row">
    <img src="/images/filmitem/@(Model.Series.Id).jpg" onerror="this.src='/images/filmitem/template.jpg';this.onerror='';" alt="@Model.Series.Name" width="100%">
</div>

<div>
    <ul>
        <li>
            <label>Average</label>
            @if (@Model.Series.VoteAverage != null) { @Model.Series.VoteAverage } else { <text>No votes</text> }
        </li>
        <li>
            <label>Votes</label>
            @if (@Model.Series.VoteCount != null) { @Model.Series.VoteCount } else { <text>No votes</text> }
        </li>
        @if (User.Identity.IsAuthenticated)
        {
            @await Html.PartialAsync("_FilmItemRatingPartial", Model.Series)
        }
        <li>
            <label>Premiered</label> @Model.PremiereDate
        </li>
        <li>
            <label>Runtime</label> @Model.TotalRuntime
        </li>
        <li>
            <label>Genres</label>
            @String.Join(", ", Model.Genres)
            @if (User.Identity.IsAuthenticated) { <a asp-action="Genre">Edit</a> }
        </li>
        <li>
            <label>Status</label> @Model.Series.Status
        </li>
    </ul>
</div>

@foreach (var season in @Model.Series.Seasons.OrderBy(s => s.Season_SeasonNumber))
{
    <div>
        <a asp-action="Details" asp-controller="Season" asp-route-seasonnumber="@season.Season_SeasonNumber">
            <img src="/images/filmitem/poster/@(season.Id).jpg" onerror="this.src='/images/filmitem/poster/template.jpg';this.onerror='';" alt="@season.Name" width="200px" height="300px"/>
        </a>
        <div>@(season.Episodes.Count) episodes</div>
    </div>
}

<div>
    @Model.Series.Seasons.Count @(@Model.Series.Seasons.Count > 1 || Model.Series.Seasons.Count == 0 ? "Seasons" : "Season" )
</div>

@if (User.Identity.IsAuthenticated)
{
    <div class="text-center">
        <a asp-controller="Season" asp-action="Create" class="btn btn-primary">Add Season</a>
    </div>
}

@if (User.Identity.IsAuthenticated)
{
    <form class="form-horizontal" asp-action="HistoryModal" asp-controller="User" method="post" enctype="multipart/form-data">
        <input type="hidden" name="FilmItemId" value="@Model.Series.Id" />
        <div class="col-md-8">
            <span class="text-danger"></span>
            <input type="date" name="WatchedOn" />
        </div>
        <div class="text-center">
            <button class="btn btn-primary" type="submit">Save Changes</button>
        </div>
    </form>
    
    <div id="modal-placeholder"></div>
    <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal" data-url="@Url.Action("ListsModal", new { Slug = Model.Series.Slug })">
        Add To List
    </button>
}

@if (Model.RecentlyAiredEpisodes.Count > 0)
{
    <div class="row">
        <div>Recently Aired Episodes</div>
        @foreach (var episode in Model.RecentlyAiredEpisodes)
        {
            <a asp-action="Details" asp-controller="Episode" asp-route-seasonnumber="@episode.Season_SeasonNumber">
                <img src="/images/filmitem/@(episode.Id).jpg" onerror="this.src='/images/filmitem/template.jpg';this.onerror='';" alt="@episode.Name" width="300px" height="170px"/>
            </a>
            <div>
                @if(@episode.Episode_EpisodeNumber < 10)
                { 
                    <text>@(episode.Episode_SeasonNumber + "x0" + @episode.Episode_EpisodeNumber)</text>
                } else
                {
                    <text>@(episode.Episode_SeasonNumber + "x" + @episode.Episode_EpisodeNumber)</text>
                }
                <text>@episode.Name</text>
            </div>
            <div>
                @episode.ReleaseDate.Value.ToString("dd MMMM yyyy")
            </div>
            <br>
        }
    </div>
}

@await Html.PartialAsync("_FilmItemVideoPartial", Model.Series)

@await Html.PartialAsync("_FilmItemCastPartial", Model.Series)

@await Html.PartialAsync("_FilmItemCommentPartial", Model.Series)

@await Html.PartialAsync("_FilmItemListsPartial", Model.Series)

@await Html.PartialAsync("_MediaPartial", Model.Series.Media)

<div>
    <img src="/images/filmitem/poster/@(Model.Series.Id).jpg" onerror="this.src='/images/filmitem/poster/template.jpg';this.onerror='';" alt="@Model.Series.Name">
</div>

@section Scripts
{
    <script>
        var select = '';
        for (i=1; i<=10; i++)
        {
            select += '<option val=' + i + '>' + i + '</option>';
        }
        $('#rating').html(select);
    </script>
}